/*
Todo app API.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Todo struct for Todo
type Todo struct {
	Id float32 `json:"id"`
	Title string `json:"title"`
	Details *string `json:"details,omitempty"`
}

// NewTodo instantiates a new Todo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTodo(id float32, title string) *Todo {
	this := Todo{}
	this.Id = id
	this.Title = title
	return &this
}

// NewTodoWithDefaults instantiates a new Todo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTodoWithDefaults() *Todo {
	this := Todo{}
	return &this
}

// GetId returns the Id field value
func (o *Todo) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Todo) GetIdOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Todo) SetId(v float32) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *Todo) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Todo) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Todo) SetTitle(v string) {
	o.Title = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Todo) GetDetails() string {
	if o == nil || isNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Todo) GetDetailsOk() (*string, bool) {
	if o == nil || isNil(o.Details) {
    return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Todo) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *Todo) SetDetails(v string) {
	o.Details = &v
}

func (o Todo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableTodo struct {
	value *Todo
	isSet bool
}

func (v NullableTodo) Get() *Todo {
	return v.value
}

func (v *NullableTodo) Set(val *Todo) {
	v.value = val
	v.isSet = true
}

func (v NullableTodo) IsSet() bool {
	return v.isSet
}

func (v *NullableTodo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTodo(val *Todo) *NullableTodo {
	return &NullableTodo{value: val, isSet: true}
}

func (v NullableTodo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTodo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


